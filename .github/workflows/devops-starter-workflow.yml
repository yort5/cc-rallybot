name: Deploy ASP.NET Core app to Azure Web App 

on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: "cc-rallybot"    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'             # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '5.0.x'                  # set this to the dot net version to use
  RESOURCEGROUPNAME: "cc-rallybot-rg"
  LOCATION: "South Central US"
  HOSTINGPLANNAME: "cc-rallybot-plan"
  APPINSIGHTLOCATION: "South Central US"
  SKU: "B1 Basic"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    # Checkout the repo
    - uses: actions/checkout@master
    
    - name: Creating artifact directories
      run: |
        mkdir buildartifacts
        mkdir deploymenttemplates

    # Setup .NET Core SDK
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 
    
    # Run dotnet build and publish
    - name: dotnet build unit test and publish
      run: |
        cd Application
        dotnet restore
        dotnet build --configuration Release
        dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/../publish/Application/build'
        dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/../publish/App_Data/jobs/continuous/rallywebjob'
    
    - name: Archive bundle
      run: |
        cd publish
        zip -qq -r ../buildartifacts/CCRally.zip *

    - name: Upload Application to Build Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: buildartifacts
        path: buildartifacts

    - name: Archive ArmTemplates
      run: |
        zip -qq -r ./deploymenttemplates/ArmTemplates.zip ./ArmTemplates

    - name: Upload Arm templates to Artifact
      continue-on-error: false
      uses: actions/upload-artifact@v2
      with:
        name: deploymenttemplates
        path: deploymenttemplates

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:

    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: buildartifacts
        path: buildartifacts

    - name: Unzipping Build artifact
      run: |
        unzip -qq ./buildartifacts/CCRally.zip

    - name: Download an ARM template
      uses: actions/download-artifact@v2
      continue-on-error: false
      with:
        name: deploymenttemplates
        path: deploymenttemplates

    - name: Unzipping ARM artifact
      run: |
        unzip -qq -o ./deploymenttemplates/ArmTemplates.zip -d .

    - name: Login to Azure
      uses: azure/login@v1
      continue-on-error: false
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy ARM Template
      uses: azure/CLI@v1
      continue-on-error: false
      with:
        inlineScript: |
          az group create --name "${{ env.RESOURCEGROUPNAME }}" --location "${{ env.LOCATION }}"
          az deployment group create --resource-group "${{ env.RESOURCEGROUPNAME }}" --template-file ./ArmTemplates/windows-webapp-template.json --parameters webAppName="${{ env.AZURE_WEBAPP_NAME }}" hostingPlanName="${{ env.HOSTINGPLANNAME }}" appInsightsLocation="${{ env.APPINSIGHTLOCATION }}" sku="${{ env.SKU }}"

    - name: 'Deploy web app'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
        
    - name: Kick off the webjob with powershell
      if: github.event.action == 'inline'
      run: |
        '"dotnet ccrallybot.dll" | Out-File run.cmd -Encoding ASCII; $LASTEXITCODE'
